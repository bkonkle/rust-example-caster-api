name: build-test

on:
    pull_request:
        paths-ignore:
            - "**.md"
    push:
        branches:
            - main
        paths-ignore:
            - "**.md"
    workflow_dispatch:

env:
    CARGO_TERM_COLOR: always

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
              with:
                  ref: ${{ github.event.pull_request.head.ref }}
                  fetch-depth: 0

            - uses: ./.github/workflows/actions/cache-app

            - run: cargo build
            - run: cargo test

    test:
        runs-on: ubuntu-latest
        needs: build
        steps:
            - uses: actions/checkout@v2

            - uses: ./.github/workflows/actions/cache-app
            - uses: ./.github/workflows/actions/setup-docker

            - name: Run docker-compose
              run: cd apps/api && docker-compose -f docker-compose.yml --env-file .env.ci up -d

            - run: cargo make db-create
            - run: cargo make db-migrate
            - run: cargo make integration-ci
              env:
                  OAUTH2_CLIENT_ID: ${{ secrets.OAUTH2_CLIENT_ID }}
                  OAUTH2_CLIENT_SECRET: ${{ secrets.OAUTH2_CLIENT_SECRET }}
                  TEST_USER: ${{ secrets.TEST_USER }}
                  TEST_PASS: ${{ secrets.TEST_PASS }}
                  TEST_ALT_USER: ${{ secrets.TEST_ALT_USER }}
                  TEST_ALT_PASS: ${{ secrets.TEST_ALT_PASS }}

    package:
        runs-on: ubuntu-latest
        needs: test
        steps:
            - uses: actions/checkout@v2
            - uses: ./.github/workflows/actions/cache-app
            - uses: ./.github/workflows/actions/setup-docker

            - name: Docker build
              id: docker_build
              uses: docker/build-push-action@v2
              with:
                  context: ./
                  file: ./apps/api/Dockerfile
                  push: false
                  tags: caster-api:latest

            - name: Image digest
              run: echo ${{ steps.docker_build.outputs.digest }}
